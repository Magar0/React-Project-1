[{"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\index.js":"1","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\App.js":"2","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 2 (ToDo)\\ToDo.js":"3","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 3 (WeatherAPI)\\Temp.js":"4","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\restaurant.js":"5","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\menuApi.js":"6","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 3 (WeatherAPI)\\weatherCard.js":"7","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\MenuCard.js":"8","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\Navbar.js":"9","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\Navbar.jsx":"10"},{"size":583,"mtime":1693458572986,"results":"11","hashOfConfig":"12"},{"size":631,"mtime":1693457177431,"results":"13","hashOfConfig":"12"},{"size":3167,"mtime":1693456479513,"results":"14","hashOfConfig":"12"},{"size":1789,"mtime":1693456578731,"results":"15","hashOfConfig":"12"},{"size":976,"mtime":1693456504789,"results":"16","hashOfConfig":"12"},{"size":3944,"mtime":1693453381463,"results":"17","hashOfConfig":"12"},{"size":2628,"mtime":1693453381476,"results":"18","hashOfConfig":"12"},{"size":1259,"mtime":1693453381463,"results":"19","hashOfConfig":"12"},{"size":359,"mtime":1693453381463,"results":"20","hashOfConfig":"12"},{"size":524,"mtime":1693458445161,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"106nq5y",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\index.js",["57"],[],"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\App.js",[],[],"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 2 (ToDo)\\ToDo.js",[],[],[],"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 3 (WeatherAPI)\\Temp.js",["58","59"],[],"import React, { useState, useEffect } from 'react';\r\nimport './style.css';\r\nimport WeatherCard from './weatherCard';\r\n\r\nconst Temp = () => {\r\n\r\n  const [searchValue, setSearchValue] = useState(\"jorhat\");\r\n  const [tempInfo, setTempInfo] = useState({})\r\n\r\n  const getWeather = async () => {\r\n    try {\r\n      let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric&appid=479a7b690583815022ddc7c7a046ce0a`;\r\n\r\n      let res = await fetch(url);\r\n      let data = await res.json();\r\n\r\n      const { temp, humidity, pressure } = data.main;\r\n      const { main: weatherMood } = data.weather[0]\r\n      const { name } = data\r\n      const { speed } = data.wind\r\n      const { country, sunset } = data.sys\r\n\r\n      const myNewWeatherInfo = {\r\n        temp, humidity, pressure, weatherMood, name, speed, country, sunset\r\n      };\r\n\r\n      setTempInfo(myNewWeatherInfo);\r\n      document.getElementById(\"error\").textContent = \"\"\r\n    }\r\n\r\n    catch (error) {\r\n      document.getElementById(\"error\").textContent = \"Type the place correctly\"\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Weather Forecasting\"\r\n    getWeather()\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"main-box-weather\">\r\n      <div> <h2>Thapa Weather Forecast</h2></div>\r\n      <div className=\"search\">\r\n        <input type=\"search\" placeholder='search...' autoFocus id='search' className='searchTerm' value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\r\n\r\n        <button className='searchBtn' onClick={getWeather}>Search</button>\r\n      </div>\r\n      <div className=\"error\"><h5 id='error'></h5></div>\r\n\r\n      {/* temp card */}\r\n     \r\n     < WeatherCard tempInfo={tempInfo}/>\r\n     </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Temp","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\restaurant.js",["60"],[],"import React, { useEffect, useState } from 'react';\r\nimport \"./style.css\";\r\nimport Menu from \"./menuApi.js\";\r\nimport MenuCard from \"./MenuCard\";\r\nimport Navbar from './Navbar';\r\n\r\nconst uniqueList = [...new Set(Menu.map(curElem => curElem.category)),\"All\"];\r\n\r\nconsole.log(uniqueList);\r\n\r\n\r\nconst Restaurant = () => {\r\n\r\n  const [menuData, setMenuData] = useState(Menu);\r\nconst [menuList,setMenuList]= useState(uniqueList)\r\n\r\n  const filterItem = (category) => {\r\n\r\n    if (category===\"All\"){\r\n      setMenuData(Menu);\r\n      return\r\n    }\r\n\r\n    const updatedList = Menu.filter((curElem) => {\r\n      return curElem.category === category;\r\n    });\r\n    setMenuData(updatedList);\r\n  }\r\n\r\n\r\n  useEffect(()=>{\r\n    document.title = \"Food App\"\r\n  },[])\r\n\r\n  return (\r\n    <>\r\n    <div className=\"main-box-restaurant\">\r\n      <Navbar filterItem={filterItem} menuList={menuList}/>\r\n      <MenuCard menuDatas={menuData} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Restaurant;","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\menuApi.js",[],[],"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 3 (WeatherAPI)\\weatherCard.js",["61"],[],"import React, { useEffect, useState } from 'react'\r\n\r\nconst WeatherCard = ({ tempInfo }) => {\r\n\r\n  const [weatherState, setWeatherState] = useState(\"\")\r\n\r\n  const {\r\n    temp, humidity, pressure, weatherMood, name, speed, country, sunset\r\n  } = tempInfo;\r\n\r\n  useEffect(() => {\r\n    if (weatherMood) {\r\n      switch (weatherMood) {\r\n        case \"Clouds\":\r\n          setWeatherState('wi-day-cloudy');\r\n          break;\r\n        case \"Haze\":\r\n          setWeatherState('wi-fog');\r\n          break;\r\n        case \"Clear\":\r\n          setWeatherState('wi-day-sunny');\r\n          break;\r\n        case \"Rain\":\r\n          setWeatherState('wi-day-rain');\r\n          break;\r\n\r\n\r\n        default:\r\n          setWeatherState('wi-day-sunny');\r\n          break;\r\n      }\r\n\r\n    }\r\n  })\r\n\r\n  // converting sec to time\r\n  let sec = sunset;\r\n  let date = new Date(sec * 1000);\r\n  let time = `${date.getHours()} : ${date.getMinutes()}`;\r\n\r\n  return (\r\n    <>\r\n      <article className='widget'>\r\n        <div className=\"weatherIcon\">\r\n          <i className={`wi ${weatherState}`}></i>\r\n        </div>\r\n        <div className=\"weather\">\r\n          <div className=\"weatherInfo\">\r\n            <div className=\"temperature\">\r\n              <span>{temp} &deg;</span>\r\n            </div>\r\n            <div className=\"description\">\r\n              <div className=\"weatherCondition\">{weatherMood}</div>\r\n              <div className=\"place\">{name}, {country}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='date'>{new Date().toLocaleString(\"en-US\")}</div>\r\n        </div>\r\n        {/* bottom 4 section  */}\r\n        <div className=\"extra-temp\">\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className='wi wi-sunset'></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">{time} <br />Sunset</p>\r\n          </div>\r\n\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className='wi wi-humidity'></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">{humidity} <br />Humidity</p>\r\n          </div>\r\n\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className='wi wi-rain'></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">{pressure} <br />Pressure</p>\r\n          </div>\r\n\r\n          <div className=\"two-sided-section\">\r\n            <p>\r\n              <i className='wi wi-strong-wind'></i>\r\n            </p>\r\n            <p className=\"extra-info-leftside\">{speed} <br />Speed</p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default WeatherCard;","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\MenuCard.js",["62","63"],[],"import React from 'react';\r\n\r\nconst MenuCard = ({ menuDatas }) => {\r\n    return (\r\n        <>\r\n            <section className=' main-card-container'>\r\n                {\r\n                    menuDatas.map((curElem) => {\r\n                        const { id, category, name, description, image, price } = curElem;\r\n\r\n                        return (\r\n                            <>\r\n                                <div className='card' key={id}>\r\n                                    <span className='card-number subtle'>{id}</span>\r\n                                    <span className='card-category subtle'>{category}</span>\r\n                                    <h2 className='card-title'>{name}</h2>\r\n                                    <span className='card-description subtle'>{description}</span>\r\n                                    <div className='card-read'>Read More</div>\r\n                                    <img src={image} alt=\"image\" />\r\n                                    <span className='card-btn subtle'>Order Now</span>\r\n\r\n                                </div>\r\n                            </>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </section>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default MenuCard","E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\component\\Project 1 (Food-Menu)\\Navbar.js",[],[],"E:\\Coding\\Project\\Project React\\Food App, Weather API , To-do List\\src\\Navbar.jsx",[],[],{"ruleId":"64","severity":1,"message":"65","line":5,"column":10,"nodeType":"66","messageId":"67","endLine":5,"endColumn":23},{"ruleId":"68","severity":1,"message":"69","line":40,"column":6,"nodeType":"70","endLine":40,"endColumn":8,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":51,"column":30,"nodeType":"74","endLine":51,"endColumn":45},{"ruleId":"64","severity":1,"message":"75","line":15,"column":17,"nodeType":"66","messageId":"67","endLine":15,"endColumn":28},{"ruleId":"68","severity":1,"message":"76","line":11,"column":3,"nodeType":"66","endLine":11,"endColumn":12,"suggestions":"77"},{"ruleId":"64","severity":1,"message":"78","line":9,"column":73,"nodeType":"66","messageId":"67","endLine":9,"endColumn":78},{"ruleId":"79","severity":1,"message":"80","line":19,"column":37,"nodeType":"74","endLine":19,"endColumn":68},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getWeather'. Either include it or remove the dependency array.","ArrayExpression",["81"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'setMenuList' is assigned a value but never used.","React Hook useEffect contains a call to 'setWeatherState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [weatherMood] as a second argument to the useEffect Hook.",["82"],"'price' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [getWeather]",{"range":"87","text":"88"},"Add dependencies array: [weatherMood]",{"range":"89","text":"90"},[1191,1193],"[getWeather]",[771,771],", [weatherMood]"]